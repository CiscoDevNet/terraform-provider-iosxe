// Copyright Â© 2023 Cisco Systems, Inc. and its affiliates.
// All rights reserved.
//
// Licensed under the Mozilla Public License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://mozilla.org/MPL/2.0/
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: MPL-2.0

// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

// Section below is generated&owned by "gen/generator.go". //template:begin imports
import (
	"context"
	"fmt"
	"net/url"
	"regexp"
	"strconv"

	"github.com/CiscoDevNet/terraform-provider-iosxe/internal/provider/helpers"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/tidwall/gjson"
	"github.com/tidwall/sjson"
)

// End of section. //template:end imports

// Section below is generated&owned by "gen/generator.go". //template:begin types
type BGPPeerSessionTemplate struct {
	Device                        types.String `tfsdk:"device"`
	Id                            types.String `tfsdk:"id"`
	DeleteMode                    types.String `tfsdk:"delete_mode"`
	Asn                           types.String `tfsdk:"asn"`
	TemplateName                  types.String `tfsdk:"template_name"`
	RemoteAs                      types.String `tfsdk:"remote_as"`
	Description                   types.String `tfsdk:"description"`
	DisableConnectedCheck         types.Bool   `tfsdk:"disable_connected_check"`
	EbgpMultihop                  types.Bool   `tfsdk:"ebgp_multihop"`
	EbgpMultihopMaxHop            types.Int64  `tfsdk:"ebgp_multihop_max_hop"`
	UpdateSourceInterfaceLoopback types.Int64  `tfsdk:"update_source_interface_loopback"`
	InheritPeerSession            types.String `tfsdk:"inherit_peer_session"`
}

type BGPPeerSessionTemplateData struct {
	Device                        types.String `tfsdk:"device"`
	Id                            types.String `tfsdk:"id"`
	Asn                           types.String `tfsdk:"asn"`
	TemplateName                  types.String `tfsdk:"template_name"`
	RemoteAs                      types.String `tfsdk:"remote_as"`
	Description                   types.String `tfsdk:"description"`
	DisableConnectedCheck         types.Bool   `tfsdk:"disable_connected_check"`
	EbgpMultihop                  types.Bool   `tfsdk:"ebgp_multihop"`
	EbgpMultihopMaxHop            types.Int64  `tfsdk:"ebgp_multihop_max_hop"`
	UpdateSourceInterfaceLoopback types.Int64  `tfsdk:"update_source_interface_loopback"`
	InheritPeerSession            types.String `tfsdk:"inherit_peer_session"`
}

// End of section. //template:end types

// Section below is generated&owned by "gen/generator.go". //template:begin getPath

func (data BGPPeerSessionTemplate) getPath() string {
	return fmt.Sprintf("Cisco-IOS-XE-native:native/router/Cisco-IOS-XE-bgp:bgp=%v/template/peer-session=%s", url.QueryEscape(fmt.Sprintf("%v", data.Asn.ValueString())), url.QueryEscape(fmt.Sprintf("%v", data.TemplateName.ValueString())))
}

func (data BGPPeerSessionTemplateData) getPath() string {
	return fmt.Sprintf("Cisco-IOS-XE-native:native/router/Cisco-IOS-XE-bgp:bgp=%v/template/peer-session=%s", url.QueryEscape(fmt.Sprintf("%v", data.Asn.ValueString())), url.QueryEscape(fmt.Sprintf("%v", data.TemplateName.ValueString())))
}

// if last path element has a key -> remove it
func (data BGPPeerSessionTemplate) getPathShort() string {
	path := data.getPath()
	re := regexp.MustCompile(`(.*)=[^\/]*$`)
	matches := re.FindStringSubmatch(path)
	if len(matches) <= 1 {
		return path
	}
	return matches[1]
}

// End of section. //template:end getPath

// Section below is generated&owned by "gen/generator.go". //template:begin toBody

func (data BGPPeerSessionTemplate) toBody(ctx context.Context) string {
	body := `{"` + helpers.LastElement(data.getPath()) + `":{}}`
	if !data.TemplateName.IsNull() && !data.TemplateName.IsUnknown() {
		body, _ = sjson.Set(body, helpers.LastElement(data.getPath())+"."+"name", data.TemplateName.ValueString())
	}
	if !data.RemoteAs.IsNull() && !data.RemoteAs.IsUnknown() {
		body, _ = sjson.Set(body, helpers.LastElement(data.getPath())+"."+"remote-as", data.RemoteAs.ValueString())
	}
	if !data.Description.IsNull() && !data.Description.IsUnknown() {
		body, _ = sjson.Set(body, helpers.LastElement(data.getPath())+"."+"description", data.Description.ValueString())
	}
	if !data.DisableConnectedCheck.IsNull() && !data.DisableConnectedCheck.IsUnknown() {
		if data.DisableConnectedCheck.ValueBool() {
			body, _ = sjson.Set(body, helpers.LastElement(data.getPath())+"."+"disable-connected-check", map[string]string{})
		}
	}
	if !data.EbgpMultihop.IsNull() && !data.EbgpMultihop.IsUnknown() {
		if data.EbgpMultihop.ValueBool() {
			body, _ = sjson.Set(body, helpers.LastElement(data.getPath())+"."+"ebgp-multihop", map[string]string{})
		}
	}
	if !data.EbgpMultihopMaxHop.IsNull() && !data.EbgpMultihopMaxHop.IsUnknown() {
		body, _ = sjson.Set(body, helpers.LastElement(data.getPath())+"."+"ebgp-multihop.max-hop", strconv.FormatInt(data.EbgpMultihopMaxHop.ValueInt64(), 10))
	}
	if !data.UpdateSourceInterfaceLoopback.IsNull() && !data.UpdateSourceInterfaceLoopback.IsUnknown() {
		body, _ = sjson.Set(body, helpers.LastElement(data.getPath())+"."+"update-source.interface.Loopback", strconv.FormatInt(data.UpdateSourceInterfaceLoopback.ValueInt64(), 10))
	}
	if !data.InheritPeerSession.IsNull() && !data.InheritPeerSession.IsUnknown() {
		body, _ = sjson.Set(body, helpers.LastElement(data.getPath())+"."+"inherit.peer-session", data.InheritPeerSession.ValueString())
	}
	return body
}

// End of section. //template:end toBody

// Section below is generated&owned by "gen/generator.go". //template:begin updateFromBody

func (data *BGPPeerSessionTemplate) updateFromBody(ctx context.Context, res gjson.Result) {
	prefix := helpers.LastElement(data.getPath()) + "."
	if res.Get(helpers.LastElement(data.getPath())).IsArray() {
		prefix += "0."
	}
	if value := res.Get(prefix + "name"); value.Exists() && !data.TemplateName.IsNull() {
		data.TemplateName = types.StringValue(value.String())
	} else {
		data.TemplateName = types.StringNull()
	}
	if value := res.Get(prefix + "remote-as"); value.Exists() && !data.RemoteAs.IsNull() {
		data.RemoteAs = types.StringValue(value.String())
	} else {
		data.RemoteAs = types.StringNull()
	}
	if value := res.Get(prefix + "description"); value.Exists() && !data.Description.IsNull() {
		data.Description = types.StringValue(value.String())
	} else {
		data.Description = types.StringNull()
	}
	if value := res.Get(prefix + "disable-connected-check"); !data.DisableConnectedCheck.IsNull() {
		if value.Exists() {
			data.DisableConnectedCheck = types.BoolValue(true)
		} else {
			data.DisableConnectedCheck = types.BoolValue(false)
		}
	} else {
		data.DisableConnectedCheck = types.BoolNull()
	}
	if value := res.Get(prefix + "ebgp-multihop"); !data.EbgpMultihop.IsNull() {
		if value.Exists() {
			data.EbgpMultihop = types.BoolValue(true)
		} else {
			data.EbgpMultihop = types.BoolValue(false)
		}
	} else {
		data.EbgpMultihop = types.BoolNull()
	}
	if value := res.Get(prefix + "ebgp-multihop.max-hop"); value.Exists() && !data.EbgpMultihopMaxHop.IsNull() {
		data.EbgpMultihopMaxHop = types.Int64Value(value.Int())
	} else {
		data.EbgpMultihopMaxHop = types.Int64Null()
	}
	if value := res.Get(prefix + "update-source.interface.Loopback"); value.Exists() && !data.UpdateSourceInterfaceLoopback.IsNull() {
		data.UpdateSourceInterfaceLoopback = types.Int64Value(value.Int())
	} else {
		data.UpdateSourceInterfaceLoopback = types.Int64Null()
	}
	if value := res.Get(prefix + "inherit.peer-session"); value.Exists() && !data.InheritPeerSession.IsNull() {
		data.InheritPeerSession = types.StringValue(value.String())
	} else {
		data.InheritPeerSession = types.StringNull()
	}
}

// End of section. //template:end updateFromBody

// Section below is generated&owned by "gen/generator.go". //template:begin fromBody

func (data *BGPPeerSessionTemplate) fromBody(ctx context.Context, res gjson.Result) {
	prefix := helpers.LastElement(data.getPath()) + "."
	if res.Get(helpers.LastElement(data.getPath())).IsArray() {
		prefix += "0."
	}
	if value := res.Get(prefix + "remote-as"); value.Exists() {
		data.RemoteAs = types.StringValue(value.String())
	}
	if value := res.Get(prefix + "description"); value.Exists() {
		data.Description = types.StringValue(value.String())
	}
	if value := res.Get(prefix + "disable-connected-check"); value.Exists() {
		data.DisableConnectedCheck = types.BoolValue(true)
	} else {
		data.DisableConnectedCheck = types.BoolValue(false)
	}
	if value := res.Get(prefix + "ebgp-multihop"); value.Exists() {
		data.EbgpMultihop = types.BoolValue(true)
	} else {
		data.EbgpMultihop = types.BoolValue(false)
	}
	if value := res.Get(prefix + "ebgp-multihop.max-hop"); value.Exists() {
		data.EbgpMultihopMaxHop = types.Int64Value(value.Int())
	}
	if value := res.Get(prefix + "update-source.interface.Loopback"); value.Exists() {
		data.UpdateSourceInterfaceLoopback = types.Int64Value(value.Int())
	}
	if value := res.Get(prefix + "inherit.peer-session"); value.Exists() {
		data.InheritPeerSession = types.StringValue(value.String())
	}
}

// End of section. //template:end fromBody

// Section below is generated&owned by "gen/generator.go". //template:begin fromBodyData

func (data *BGPPeerSessionTemplateData) fromBody(ctx context.Context, res gjson.Result) {
	prefix := helpers.LastElement(data.getPath()) + "."
	if res.Get(helpers.LastElement(data.getPath())).IsArray() {
		prefix += "0."
	}
	if value := res.Get(prefix + "remote-as"); value.Exists() {
		data.RemoteAs = types.StringValue(value.String())
	}
	if value := res.Get(prefix + "description"); value.Exists() {
		data.Description = types.StringValue(value.String())
	}
	if value := res.Get(prefix + "disable-connected-check"); value.Exists() {
		data.DisableConnectedCheck = types.BoolValue(true)
	} else {
		data.DisableConnectedCheck = types.BoolValue(false)
	}
	if value := res.Get(prefix + "ebgp-multihop"); value.Exists() {
		data.EbgpMultihop = types.BoolValue(true)
	} else {
		data.EbgpMultihop = types.BoolValue(false)
	}
	if value := res.Get(prefix + "ebgp-multihop.max-hop"); value.Exists() {
		data.EbgpMultihopMaxHop = types.Int64Value(value.Int())
	}
	if value := res.Get(prefix + "update-source.interface.Loopback"); value.Exists() {
		data.UpdateSourceInterfaceLoopback = types.Int64Value(value.Int())
	}
	if value := res.Get(prefix + "inherit.peer-session"); value.Exists() {
		data.InheritPeerSession = types.StringValue(value.String())
	}
}

// End of section. //template:end fromBodyData

// Section below is generated&owned by "gen/generator.go". //template:begin getDeletedItems

func (data *BGPPeerSessionTemplate) getDeletedItems(ctx context.Context, state BGPPeerSessionTemplate) []string {
	deletedItems := make([]string, 0)
	if !state.InheritPeerSession.IsNull() && data.InheritPeerSession.IsNull() {
		deletedItems = append(deletedItems, fmt.Sprintf("%v/inherit/peer-session", state.getPath()))
	}
	if !state.UpdateSourceInterfaceLoopback.IsNull() && data.UpdateSourceInterfaceLoopback.IsNull() {
		deletedItems = append(deletedItems, fmt.Sprintf("%v/update-source/interface/Loopback", state.getPath()))
	}
	if !state.EbgpMultihopMaxHop.IsNull() && data.EbgpMultihopMaxHop.IsNull() {
		deletedItems = append(deletedItems, fmt.Sprintf("%v/ebgp-multihop/max-hop", state.getPath()))
	}
	if !state.EbgpMultihop.IsNull() && data.EbgpMultihop.IsNull() {
		deletedItems = append(deletedItems, fmt.Sprintf("%v/ebgp-multihop", state.getPath()))
	}
	if !state.DisableConnectedCheck.IsNull() && data.DisableConnectedCheck.IsNull() {
		deletedItems = append(deletedItems, fmt.Sprintf("%v/disable-connected-check", state.getPath()))
	}
	if !state.Description.IsNull() && data.Description.IsNull() {
		deletedItems = append(deletedItems, fmt.Sprintf("%v/description", state.getPath()))
	}
	if !state.RemoteAs.IsNull() && data.RemoteAs.IsNull() {
		deletedItems = append(deletedItems, fmt.Sprintf("%v/remote-as", state.getPath()))
	}

	return deletedItems
}

// End of section. //template:end getDeletedItems

// Section below is generated&owned by "gen/generator.go". //template:begin getEmptyLeafsDelete

func (data *BGPPeerSessionTemplate) getEmptyLeafsDelete(ctx context.Context) []string {
	emptyLeafsDelete := make([]string, 0)
	if !data.EbgpMultihop.IsNull() && !data.EbgpMultihop.ValueBool() {
		emptyLeafsDelete = append(emptyLeafsDelete, fmt.Sprintf("%v/ebgp-multihop", data.getPath()))
	}
	if !data.DisableConnectedCheck.IsNull() && !data.DisableConnectedCheck.ValueBool() {
		emptyLeafsDelete = append(emptyLeafsDelete, fmt.Sprintf("%v/disable-connected-check", data.getPath()))
	}

	return emptyLeafsDelete
}

// End of section. //template:end getEmptyLeafsDelete

// Section below is generated&owned by "gen/generator.go". //template:begin getDeletePaths

func (data *BGPPeerSessionTemplate) getDeletePaths(ctx context.Context) []string {
	var deletePaths []string
	if !data.InheritPeerSession.IsNull() {
		deletePaths = append(deletePaths, fmt.Sprintf("%v/inherit/peer-session", data.getPath()))
	}
	if !data.UpdateSourceInterfaceLoopback.IsNull() {
		deletePaths = append(deletePaths, fmt.Sprintf("%v/update-source/interface/Loopback", data.getPath()))
	}
	if !data.EbgpMultihopMaxHop.IsNull() {
		deletePaths = append(deletePaths, fmt.Sprintf("%v/ebgp-multihop/max-hop", data.getPath()))
	}
	if !data.EbgpMultihop.IsNull() {
		deletePaths = append(deletePaths, fmt.Sprintf("%v/ebgp-multihop", data.getPath()))
	}
	if !data.DisableConnectedCheck.IsNull() {
		deletePaths = append(deletePaths, fmt.Sprintf("%v/disable-connected-check", data.getPath()))
	}
	if !data.Description.IsNull() {
		deletePaths = append(deletePaths, fmt.Sprintf("%v/description", data.getPath()))
	}
	if !data.RemoteAs.IsNull() {
		deletePaths = append(deletePaths, fmt.Sprintf("%v/remote-as", data.getPath()))
	}

	return deletePaths
}

// End of section. //template:end getDeletePaths
