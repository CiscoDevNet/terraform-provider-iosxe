// Copyright Â© 2023 Cisco Systems, Inc. and its affiliates.
// All rights reserved.
//
// Licensed under the Mozilla Public License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://mozilla.org/MPL/2.0/
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: MPL-2.0

// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

// Section below is generated&owned by "gen/generator.go". //template:begin imports
import (
	"fmt"
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
	"github.com/hashicorp/terraform-plugin-testing/terraform"
)

// End of section. //template:end imports

// Section below is generated&owned by "gen/generator.go". //template:begin testAcc

func TestAccIosxeIPHost(t *testing.T) {
	var checks []resource.TestCheckFunc
	checks = append(checks, resource.TestCheckResourceAttr("iosxe_ip_host.test", "host_lists.0.name", "test.router.com"))
	checks = append(checks, resource.TestCheckResourceAttr("iosxe_ip_host.test", "host_lists.0.ip_list.0", "3.3.3.3"))
	checks = append(checks, resource.TestCheckResourceAttr("iosxe_ip_host.test", "vrf.0.vrf", "VRF1"))
	checks = append(checks, resource.TestCheckResourceAttr("iosxe_ip_host.test", "vrf.0.host_name.0.host_name", "test.router.com"))
	checks = append(checks, resource.TestCheckResourceAttr("iosxe_ip_host.test", "vrf.0.host_name.0.ip_list.0", "2.2.2.2"))
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccIosxeIPHostPrerequisitesConfig + testAccIosxeIPHostConfig_minimum(),
			},
			{
				Config: testAccIosxeIPHostPrerequisitesConfig + testAccIosxeIPHostConfig_all(),
				Check:  resource.ComposeTestCheckFunc(checks...),
			},
			{
				ResourceName:            "iosxe_ip_host.test",
				ImportState:             true,
				ImportStateVerify:       true,
				ImportStateIdFunc:       iosxeIPHostImportStateIdFunc("iosxe_ip_host.test"),
				ImportStateVerifyIgnore: []string{},
				Check:                   resource.ComposeTestCheckFunc(checks...),
			},
		},
	})
}

// End of section. //template:end testAcc

// Section below is generated&owned by "gen/generator.go". //template:begin importStateIdFunc

func iosxeIPHostImportStateIdFunc(resourceName string) resource.ImportStateIdFunc {
	return func(s *terraform.State) (string, error) {

		return fmt.Sprintf(""), nil
	}
}

// End of section. //template:end importStateIdFunc

// Section below is generated&owned by "gen/generator.go". //template:begin testPrerequisites
const testAccIosxeIPHostPrerequisitesConfig = `
resource "iosxe_restconf" "PreReq0" {
	path = "Cisco-IOS-XE-native:native/vrf/definition=VRF1"
	delete = false
	attributes = {
		"name" = "VRF1"
		"address-family/ipv4" = ""
	}
}

`

// End of section. //template:end testPrerequisites

// Section below is generated&owned by "gen/generator.go". //template:begin testAccConfigMinimal

func testAccIosxeIPHostConfig_minimum() string {
	config := `resource "iosxe_ip_host" "test" {` + "\n"
	config += `	depends_on = [iosxe_restconf.PreReq0, ]` + "\n"
	config += `}` + "\n"
	return config
}

// End of section. //template:end testAccConfigMinimal

// Section below is generated&owned by "gen/generator.go". //template:begin testAccConfigAll

func testAccIosxeIPHostConfig_all() string {
	config := `resource "iosxe_ip_host" "test" {` + "\n"
	config += `	host_lists = [{` + "\n"
	config += `		name = "test.router.com"` + "\n"
	config += `		ip_list = ["3.3.3.3"]` + "\n"
	config += `	}]` + "\n"
	config += `	vrf = [{` + "\n"
	config += `		vrf = "VRF1"` + "\n"
	config += `		host_name = [{` + "\n"
	config += `			host_name = "test.router.com"` + "\n"
	config += `			ip_list = ["2.2.2.2"]` + "\n"
	config += `		}]` + "\n"
	config += `	}]` + "\n"
	config += `	depends_on = [iosxe_restconf.PreReq0, ]` + "\n"
	config += `}` + "\n"
	return config
}

// End of section. //template:end testAccConfigAll
