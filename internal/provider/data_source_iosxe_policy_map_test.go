// Copyright Â© 2023 Cisco Systems, Inc. and its affiliates.
// All rights reserved.
//
// Licensed under the Mozilla Public License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://mozilla.org/MPL/2.0/
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: MPL-2.0

// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccDataSourceIosxePolicyMap(t *testing.T) {
	var checks []resource.TestCheckFunc
	checks = append(checks, resource.TestCheckResourceAttr("data.iosxe_policy_map.test", "description", "My first policy-map"))
	checks = append(checks, resource.TestCheckResourceAttr("data.iosxe_policy_map.test", "classes.0.name", "CLASS1"))
	checks = append(checks, resource.TestCheckResourceAttr("data.iosxe_policy_map.test", "classes.0.actions.0.type", "bandwidth"))
	checks = append(checks, resource.TestCheckResourceAttr("data.iosxe_policy_map.test", "classes.0.actions.0.bandwidth_percent", "10"))
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccDataSourceIosxePolicyMapPrerequisitesConfig + testAccDataSourceIosxePolicyMapConfig(),
				Check:  resource.ComposeTestCheckFunc(checks...),
			},
		},
	})
}

const testAccDataSourceIosxePolicyMapPrerequisitesConfig = `
resource "iosxe_restconf" "PreReq0" {
	path = "Cisco-IOS-XE-native:native/policy/Cisco-IOS-XE-policy:class-map=CLASS1"
	attributes = {
		"name" = "CLASS1"
		"prematch" = "match-all"
	}
}

`

func testAccDataSourceIosxePolicyMapConfig() string {
	config := `resource "iosxe_policy_map" "test" {` + "\n"
	config += `	name = "POLICY1"` + "\n"
	config += `	description = "My first policy-map"` + "\n"
	config += `	classes = [{` + "\n"
	config += `		name = "CLASS1"` + "\n"
	config += `		actions = [{` + "\n"
	config += `			type = "bandwidth"` + "\n"
	config += `			bandwidth_percent = 10` + "\n"
	config += `		}]` + "\n"
	config += `	}]` + "\n"
	config += `	depends_on = [iosxe_restconf.PreReq0, ]` + "\n"
	config += `}` + "\n"

	config += `
		data "iosxe_policy_map" "test" {
			name = "POLICY1"
			depends_on = [iosxe_policy_map.test]
		}
	`
	return config
}
