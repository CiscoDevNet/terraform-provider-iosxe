// Copyright Â© 2023 Cisco Systems, Inc. and its affiliates.
// All rights reserved.
//
// Licensed under the Mozilla Public License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://mozilla.org/MPL/2.0/
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: MPL-2.0

// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccIosxeBanner(t *testing.T) {
	var checks []resource.TestCheckFunc
	checks = append(checks, resource.TestCheckResourceAttr("iosxe_banner.test", "exec_banner", "My Exec Banner"))
	checks = append(checks, resource.TestCheckResourceAttr("iosxe_banner.test", "login_banner", "My Login Banner"))
	checks = append(checks, resource.TestCheckResourceAttr("iosxe_banner.test", "prompt_timeout_banner", "My Prompt-Timeout Banner"))
	checks = append(checks, resource.TestCheckResourceAttr("iosxe_banner.test", "motd_banner", "My MOTD Banner"))
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccIosxeBannerConfig_minimum(),
			},
			{
				Config: testAccIosxeBannerConfig_all(),
				Check:  resource.ComposeTestCheckFunc(checks...),
			},
			{
				ResourceName:  "iosxe_banner.test",
				ImportState:   true,
				ImportStateId: "Cisco-IOS-XE-native:native/banner",
			},
		},
	})
}

func testAccIosxeBannerConfig_minimum() string {
	config := `resource "iosxe_banner" "test" {` + "\n"
	config += `}` + "\n"
	return config
}

func testAccIosxeBannerConfig_all() string {
	config := `resource "iosxe_banner" "test" {` + "\n"
	config += `	exec_banner = "My Exec Banner"` + "\n"
	config += `	login_banner = "My Login Banner"` + "\n"
	config += `	prompt_timeout_banner = "My Prompt-Timeout Banner"` + "\n"
	config += `	motd_banner = "My MOTD Banner"` + "\n"
	config += `}` + "\n"
	return config
}
