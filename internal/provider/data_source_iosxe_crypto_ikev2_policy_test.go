// Copyright Â© 2023 Cisco Systems, Inc. and its affiliates.
// All rights reserved.
//
// Licensed under the Mozilla Public License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://mozilla.org/MPL/2.0/
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: MPL-2.0

// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccDataSourceIosxeCryptoIKEv2Policy(t *testing.T) {
	var checks []resource.TestCheckFunc
	checks = append(checks, resource.TestCheckResourceAttr("data.iosxe_crypto_ikev2_policy.test", "match_address_local_ip.0", "1.2.3.4"))
	checks = append(checks, resource.TestCheckResourceAttr("data.iosxe_crypto_ikev2_policy.test", "match_fvrf_any", "true"))
	checks = append(checks, resource.TestCheckResourceAttr("data.iosxe_crypto_ikev2_policy.test", "proposals.0.proposals", "proposal123"))
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccDataSourceIosxeCryptoIKEv2PolicyPrerequisitesConfig + testAccDataSourceIosxeCryptoIKEv2PolicyConfig(),
				Check:  resource.ComposeTestCheckFunc(checks...),
			},
		},
	})
}

const testAccDataSourceIosxeCryptoIKEv2PolicyPrerequisitesConfig = `
resource "iosxe_restconf" "PreReq0" {
	path = "Cisco-IOS-XE-native:native/crypto/Cisco-IOS-XE-crypto:ikev2/proposal=proposal123"
	attributes = {
		"name" = "proposal123"
		"encryption/en-3des" = ""
		"group/fourteen" = ""
		"integrity/md5" = ""
	}
}

`

func testAccDataSourceIosxeCryptoIKEv2PolicyConfig() string {
	config := `resource "iosxe_crypto_ikev2_policy" "test" {` + "\n"
	config += `	name = "policy1"` + "\n"
	config += `	match_address_local_ip = ["1.2.3.4"]` + "\n"
	config += `	match_fvrf_any = true` + "\n"
	config += `	proposals = [{` + "\n"
	config += `		proposals = "proposal123"` + "\n"
	config += `	}]` + "\n"
	config += `	depends_on = [iosxe_restconf.PreReq0, ]` + "\n"
	config += `}` + "\n"

	config += `
		data "iosxe_crypto_ikev2_policy" "test" {
			name = "policy1"
			depends_on = [iosxe_crypto_ikev2_policy.test]
		}
	`
	return config
}
